[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/python"]

[project]
name = "dht22-monitoring"
version = "0.1.0"
description = "DHT22 Environmental Monitoring System with Arduino and Dash Dashboard"
authors = [
    { name = "Developer", email = "developer@example.com" }
]
dependencies = [
    "dash>=2.17.0",
    "dash-bootstrap-components>=1.5.0",
    "plotly>=5.17.0",
    "pandas>=2.0.0",
    "pyserial>=3.5",
    "numpy>=1.24.0",
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.8.0",
    "black>=24.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "bandit>=1.7.5",
    "safety>=3.0.0",
    "gitpython>=3.1.40",
]

[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [
    ".venv",
    "__pycache__",
    ".git",
    "dist",
    "build",
    ".pytest_cache",
    ".mypy_cache",
    "tools/security/trufflehog*",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # bandit (security)
    "T20", # flake8-print
]
ignore = [
    "S101",  # Allow assert statements
    "T201",  # Allow print statements in scripts
    "S603",  # Allow subprocess calls
    "S607",  # Allow subprocess with shell=True in tools
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"tools/**/*.py" = ["T201", "S603", "S607"]  # Allow prints and subprocess in tools
"tests/**/*.py" = ["S101"]  # Allow asserts in tests

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
  | tools/security/trufflehog.*
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Relaxed for dashboard code
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "^tools/security/",
    "^\\.venv/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/python",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "-v"
]

[tool.bandit]
exclude_dirs = [".venv", "tests", "tools/security"]
skips = ["B101"]  # Skip assert_used test
