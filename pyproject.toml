[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ina219-power-monitoring"
version = "0.1.0"
description = "INA219 Power Monitoring System with Arduino and Dash Dashboard"
authors = [
    { name = "Developer", email = "developer@example.com" }
]
dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "matplotlib>=3.5.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "plotly>=5.0.0",
    "dash>=2.0.0",
    "dash-bootstrap-components>=1.5.0",
    "platformio>=6.0.0",
    "pyserial>=3.5",
    "scipy>=1.11.1",
    "scikit-learn>=1.3.0",
    "pyyaml>=6.0",
    "seaborn>=0.12.0",
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=23.0.0",
    "autoflake>=2.0.0",
    "isort>=5.12.0",
    "pyright>=1.1.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "tox>=4.0.0",
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
    "colorama>=0.4.6",
    "rich>=13.0.0",
    "click>=8.1.0",
    "pathlib2>=2.3.7",
    "jsonschema>=4.17.0",
    "flask>=2.3.0",
    "jinja2>=3.1.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.0.0",
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "-v"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]