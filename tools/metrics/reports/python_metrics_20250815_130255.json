{
  "timestamp": "2025-08-15T13:02:55.092531",
  "project": "DHT22 Environmental Monitoring",
  "coverage": {
    "timestamp": "2025-08-15T13:02:32.948507",
    "total_coverage": 0,
    "files": {},
    "missing_lines": {},
    "summary": {},
    "error": ""
  },
  "complexity": {
    "timestamp": "2025-08-15T13:02:39.412559",
    "cyclomatic_complexity": {
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\dashboard\\app.py": [
        {
          "type": "function",
          "rank": "A",
          "endline": 131,
          "name": "data_collection_thread",
          "col_offset": 0,
          "complexity": 4,
          "lineno": 121,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 290,
          "name": "update_statistics",
          "col_offset": 0,
          "complexity": 4,
          "lineno": 244,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 167,
          "name": "update_current_values",
          "col_offset": 0,
          "complexity": 3,
          "lineno": 150,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 203,
          "name": "update_temperature_chart",
          "col_offset": 0,
          "complexity": 2,
          "lineno": 174,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 238,
          "name": "update_humidity_chart",
          "col_offset": 0,
          "complexity": 2,
          "lineno": 209,
          "closures": []
        }
      ],
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\data_processor.py": [
        {
          "type": "function",
          "rank": "B",
          "endline": 102,
          "name": "get_comfort_level",
          "col_offset": 0,
          "complexity": 6,
          "lineno": 81,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DataBuffer",
          "endline": 184,
          "name": "get_stats",
          "col_offset": 4,
          "complexity": 5,
          "lineno": 166,
          "closures": []
        },
        {
          "type": "class",
          "rank": "A",
          "endline": 184,
          "name": "DataBuffer",
          "col_offset": 0,
          "complexity": 3,
          "lineno": 137,
          "methods": [
            {
              "type": "method",
              "rank": "A",
              "classname": "DataBuffer",
              "endline": 142,
              "name": "__init__",
              "col_offset": 4,
              "complexity": 1,
              "lineno": 140,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DataBuffer",
              "endline": 148,
              "name": "add",
              "col_offset": 4,
              "complexity": 2,
              "lineno": 144,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DataBuffer",
              "endline": 154,
              "name": "get_recent",
              "col_offset": 4,
              "complexity": 3,
              "lineno": 150,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DataBuffer",
              "endline": 160,
              "name": "to_dataframe",
              "col_offset": 4,
              "complexity": 2,
              "lineno": 156,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DataBuffer",
              "endline": 164,
              "name": "clear",
              "col_offset": 4,
              "complexity": 1,
              "lineno": 162,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DataBuffer",
              "endline": 184,
              "name": "get_stats",
              "col_offset": 4,
              "complexity": 5,
              "lineno": 166,
              "closures": []
            }
          ]
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DataBuffer",
          "endline": 154,
          "name": "get_recent",
          "col_offset": 4,
          "complexity": 3,
          "lineno": 150,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 63,
          "name": "calculate_heat_index",
          "col_offset": 0,
          "complexity": 2,
          "lineno": 31,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 134,
          "name": "process_sensor_data",
          "col_offset": 0,
          "complexity": 2,
          "lineno": 105,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DataBuffer",
          "endline": 148,
          "name": "add",
          "col_offset": 4,
          "complexity": 2,
          "lineno": 144,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DataBuffer",
          "endline": 160,
          "name": "to_dataframe",
          "col_offset": 4,
          "complexity": 2,
          "lineno": 156,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 28,
          "name": "calculate_dew_point",
          "col_offset": 0,
          "complexity": 1,
          "lineno": 11,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 78,
          "name": "calculate_discomfort_index",
          "col_offset": 0,
          "complexity": 1,
          "lineno": 66,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DataBuffer",
          "endline": 142,
          "name": "__init__",
          "col_offset": 4,
          "complexity": 1,
          "lineno": 140,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DataBuffer",
          "endline": 164,
          "name": "clear",
          "col_offset": 4,
          "complexity": 1,
          "lineno": 162,
          "closures": []
        }
      ],
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\env_loader.py": [
        {
          "type": "method",
          "rank": "C",
          "classname": "EnvLoader",
          "endline": 64,
          "name": "_load_env_file",
          "col_offset": 4,
          "complexity": 12,
          "lineno": 27,
          "closures": []
        },
        {
          "type": "class",
          "rank": "A",
          "endline": 156,
          "name": "EnvLoader",
          "col_offset": 0,
          "complexity": 5,
          "lineno": 13,
          "methods": [
            {
              "type": "method",
              "rank": "A",
              "classname": "EnvLoader",
              "endline": 25,
              "name": "__init__",
              "col_offset": 4,
              "complexity": 2,
              "lineno": 16,
              "closures": []
            },
            {
              "type": "method",
              "rank": "C",
              "classname": "EnvLoader",
              "endline": 64,
              "name": "_load_env_file",
              "col_offset": 4,
              "complexity": 12,
              "lineno": 27,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "EnvLoader",
              "endline": 78,
              "name": "get_str",
              "col_offset": 4,
              "complexity": 1,
              "lineno": 67,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "EnvLoader",
              "endline": 95,
              "name": "get_int",
              "col_offset": 4,
              "complexity": 2,
              "lineno": 81,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "EnvLoader",
              "endline": 112,
              "name": "get_float",
              "col_offset": 4,
              "complexity": 2,
              "lineno": 98,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "EnvLoader",
              "endline": 132,
              "name": "get_bool",
              "col_offset": 4,
              "complexity": 3,
              "lineno": 115,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "EnvLoader",
              "endline": 156,
              "name": "get_list",
              "col_offset": 4,
              "complexity": 5,
              "lineno": 135,
              "closures": []
            }
          ]
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "EnvLoader",
          "endline": 156,
          "name": "get_list",
          "col_offset": 4,
          "complexity": 5,
          "lineno": 135,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "EnvLoader",
          "endline": 132,
          "name": "get_bool",
          "col_offset": 4,
          "complexity": 3,
          "lineno": 115,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "EnvLoader",
          "endline": 25,
          "name": "__init__",
          "col_offset": 4,
          "complexity": 2,
          "lineno": 16,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "EnvLoader",
          "endline": 95,
          "name": "get_int",
          "col_offset": 4,
          "complexity": 2,
          "lineno": 81,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "EnvLoader",
          "endline": 112,
          "name": "get_float",
          "col_offset": 4,
          "complexity": 2,
          "lineno": 98,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 177,
          "name": "load_database_config",
          "col_offset": 0,
          "complexity": 1,
          "lineno": 170,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 188,
          "name": "load_server_config",
          "col_offset": 0,
          "complexity": 1,
          "lineno": 181,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 198,
          "name": "load_sensor_config",
          "col_offset": 0,
          "complexity": 1,
          "lineno": 192,
          "closures": []
        },
        {
          "type": "function",
          "rank": "A",
          "endline": 206,
          "name": "load_logging_config",
          "col_offset": 0,
          "complexity": 1,
          "lineno": 202,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "EnvLoader",
          "endline": 78,
          "name": "get_str",
          "col_offset": 4,
          "complexity": 1,
          "lineno": 67,
          "closures": []
        }
      ],
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\serial_reader.py": [
        {
          "type": "method",
          "rank": "A",
          "classname": "DHT22SerialReader",
          "endline": 69,
          "name": "read_sensor_data",
          "col_offset": 4,
          "complexity": 5,
          "lineno": 47,
          "closures": []
        },
        {
          "type": "class",
          "rank": "A",
          "endline": 76,
          "name": "DHT22SerialReader",
          "col_offset": 0,
          "complexity": 3,
          "lineno": 15,
          "methods": [
            {
              "type": "method",
              "rank": "A",
              "classname": "DHT22SerialReader",
              "endline": 23,
              "name": "__init__",
              "col_offset": 4,
              "complexity": 1,
              "lineno": 18,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DHT22SerialReader",
              "endline": 38,
              "name": "connect",
              "col_offset": 4,
              "complexity": 2,
              "lineno": 25,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DHT22SerialReader",
              "endline": 45,
              "name": "disconnect",
              "col_offset": 4,
              "complexity": 3,
              "lineno": 40,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DHT22SerialReader",
              "endline": 69,
              "name": "read_sensor_data",
              "col_offset": 4,
              "complexity": 5,
              "lineno": 47,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DHT22SerialReader",
              "endline": 76,
              "name": "get_available_ports",
              "col_offset": 4,
              "complexity": 2,
              "lineno": 71,
              "closures": []
            }
          ]
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DHT22SerialReader",
          "endline": 45,
          "name": "disconnect",
          "col_offset": 4,
          "complexity": 3,
          "lineno": 40,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DHT22SerialReader",
          "endline": 38,
          "name": "connect",
          "col_offset": 4,
          "complexity": 2,
          "lineno": 25,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DHT22SerialReader",
          "endline": 76,
          "name": "get_available_ports",
          "col_offset": 4,
          "complexity": 2,
          "lineno": 71,
          "closures": []
        },
        {
          "type": "class",
          "rank": "A",
          "endline": 113,
          "name": "DHT22Simulator",
          "col_offset": 0,
          "complexity": 2,
          "lineno": 79,
          "methods": [
            {
              "type": "method",
              "rank": "A",
              "classname": "DHT22Simulator",
              "endline": 83,
              "name": "__init__",
              "col_offset": 4,
              "complexity": 1,
              "lineno": 82,
              "closures": []
            },
            {
              "type": "method",
              "rank": "A",
              "classname": "DHT22Simulator",
              "endline": 113,
              "name": "read_sensor_data",
              "col_offset": 4,
              "complexity": 1,
              "lineno": 85,
              "closures": []
            }
          ]
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DHT22SerialReader",
          "endline": 23,
          "name": "__init__",
          "col_offset": 4,
          "complexity": 1,
          "lineno": 18,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DHT22Simulator",
          "endline": 83,
          "name": "__init__",
          "col_offset": 4,
          "complexity": 1,
          "lineno": 82,
          "closures": []
        },
        {
          "type": "method",
          "rank": "A",
          "classname": "DHT22Simulator",
          "endline": 113,
          "name": "read_sensor_data",
          "col_offset": 4,
          "complexity": 1,
          "lineno": 85,
          "closures": []
        }
      ]
    },
    "maintainability_index": {
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\dashboard\\app.py": {
        "mi": 56.710529462199744,
        "rank": "A"
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\data_processor.py": {
        "mi": 62.47774621906861,
        "rank": "A"
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\env_loader.py": {
        "mi": 64.86185053508896,
        "rank": "A"
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\serial_reader.py": {
        "mi": 62.78625896233985,
        "rank": "A"
      }
    },
    "halstead_metrics": {
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\dashboard\\app.py": {
        "total": {
          "h1": 3,
          "h2": 9,
          "N1": 7,
          "N2": 9,
          "vocabulary": 12,
          "length": 16,
          "calculated_length": 33.28421251514428,
          "volume": 57.359400011538504,
          "difficulty": 1.5,
          "effort": 86.03910001730776,
          "time": 4.779950000961542,
          "bugs": 0.01911980000384617
        },
        "functions": {
          "data_collection_thread": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "update_current_values": {
            "h1": 1,
            "h2": 1,
            "N1": 1,
            "N2": 1,
            "vocabulary": 2,
            "length": 2,
            "calculated_length": 0.0,
            "volume": 2.0,
            "difficulty": 0.5,
            "effort": 1.0,
            "time": 0.05555555555555555,
            "bugs": 0.0006666666666666666
          },
          "update_temperature_chart": {
            "h1": 1,
            "h2": 1,
            "N1": 1,
            "N2": 1,
            "vocabulary": 2,
            "length": 2,
            "calculated_length": 0.0,
            "volume": 2.0,
            "difficulty": 0.5,
            "effort": 1.0,
            "time": 0.05555555555555555,
            "bugs": 0.0006666666666666666
          },
          "update_humidity_chart": {
            "h1": 1,
            "h2": 1,
            "N1": 1,
            "N2": 1,
            "vocabulary": 2,
            "length": 2,
            "calculated_length": 0.0,
            "volume": 2.0,
            "difficulty": 0.5,
            "effort": 1.0,
            "time": 0.05555555555555555,
            "bugs": 0.0006666666666666666
          },
          "update_statistics": {
            "h1": 2,
            "h2": 3,
            "N1": 2,
            "N2": 3,
            "vocabulary": 5,
            "length": 5,
            "calculated_length": 6.754887502163469,
            "volume": 11.60964047443681,
            "difficulty": 1.0,
            "effort": 11.60964047443681,
            "time": 0.6449800263576005,
            "bugs": 0.0038698801581456034
          }
        }
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\data_processor.py": {
        "total": {
          "h1": 13,
          "h2": 89,
          "N1": 62,
          "N2": 119,
          "vocabulary": 102,
          "length": 181,
          "calculated_length": 624.4459916918437,
          "volume": 1207.7089868968405,
          "difficulty": 8.691011235955056,
          "effort": 10496.212374884339,
          "time": 583.1229097157966,
          "bugs": 0.40256966229894686
        },
        "functions": {
          "calculate_dew_point": {
            "h1": 4,
            "h2": 12,
            "N1": 8,
            "N2": 16,
            "vocabulary": 16,
            "length": 24,
            "calculated_length": 51.01955000865388,
            "volume": 96.0,
            "difficulty": 2.6666666666666665,
            "effort": 256.0,
            "time": 14.222222222222221,
            "bugs": 0.032
          },
          "calculate_heat_index": {
            "h1": 7,
            "h2": 48,
            "N1": 34,
            "N2": 67,
            "vocabulary": 55,
            "length": 101,
            "calculated_length": 287.7296844890187,
            "volume": 583.9173310659907,
            "difficulty": 4.885416666666667,
            "effort": 2852.679461145309,
            "time": 158.4821922858505,
            "bugs": 0.1946391103553302
          },
          "calculate_discomfort_index": {
            "h1": 2,
            "h2": 9,
            "N1": 5,
            "N2": 10,
            "vocabulary": 11,
            "length": 15,
            "calculated_length": 30.529325012980813,
            "volume": 51.89147427955947,
            "difficulty": 1.1111111111111112,
            "effort": 57.65719364395497,
            "time": 3.203177424664165,
            "bugs": 0.01729715809318649
          },
          "get_comfort_level": {
            "h1": 1,
            "h2": 6,
            "N1": 5,
            "N2": 10,
            "vocabulary": 7,
            "length": 15,
            "calculated_length": 15.509775004326936,
            "volume": 42.11032383086406,
            "difficulty": 0.8333333333333334,
            "effort": 35.09193652572005,
            "time": 1.9495520292066695,
            "bugs": 0.01403677461028802
          },
          "process_sensor_data": {
            "h1": 1,
            "h2": 2,
            "N1": 1,
            "N2": 2,
            "vocabulary": 3,
            "length": 3,
            "calculated_length": 2.0,
            "volume": 4.754887502163469,
            "difficulty": 0.5,
            "effort": 2.3774437510817346,
            "time": 0.1320802083934297,
            "bugs": 0.0015849625007211565
          },
          "__init__": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "add": {
            "h1": 1,
            "h2": 2,
            "N1": 1,
            "N2": 2,
            "vocabulary": 3,
            "length": 3,
            "calculated_length": 2.0,
            "volume": 4.754887502163469,
            "difficulty": 0.5,
            "effort": 2.3774437510817346,
            "time": 0.1320802083934297,
            "bugs": 0.0015849625007211565
          },
          "get_recent": {
            "h1": 3,
            "h2": 3,
            "N1": 3,
            "N2": 5,
            "vocabulary": 6,
            "length": 8,
            "calculated_length": 9.509775004326938,
            "volume": 20.67970000576925,
            "difficulty": 2.5,
            "effort": 51.69925001442312,
            "time": 2.87218055635684,
            "bugs": 0.006893233335256416
          },
          "to_dataframe": {
            "h1": 1,
            "h2": 1,
            "N1": 1,
            "N2": 1,
            "vocabulary": 2,
            "length": 2,
            "calculated_length": 0.0,
            "volume": 2.0,
            "difficulty": 0.5,
            "effort": 1.0,
            "time": 0.05555555555555555,
            "bugs": 0.0006666666666666666
          },
          "clear": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "get_stats": {
            "h1": 4,
            "h2": 6,
            "N1": 4,
            "N2": 6,
            "vocabulary": 10,
            "length": 10,
            "calculated_length": 23.509775004326936,
            "volume": 33.219280948873624,
            "difficulty": 2.0,
            "effort": 66.43856189774725,
            "time": 3.691031216541514,
            "bugs": 0.01107309364962454
          }
        }
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\env_loader.py": {
        "total": {
          "h1": 10,
          "h2": 24,
          "N1": 16,
          "N2": 27,
          "vocabulary": 34,
          "length": 43,
          "calculated_length": 143.2583809661814,
          "volume": 218.7609021737646,
          "difficulty": 5.625,
          "effort": 1230.530074727426,
          "time": 68.36278192930143,
          "bugs": 0.0729203007245882
        },
        "functions": {
          "__init__": {
            "h1": 1,
            "h2": 2,
            "N1": 1,
            "N2": 2,
            "vocabulary": 3,
            "length": 3,
            "calculated_length": 2.0,
            "volume": 4.754887502163469,
            "difficulty": 0.5,
            "effort": 2.3774437510817346,
            "time": 0.1320802083934297,
            "bugs": 0.0015849625007211565
          },
          "_load_env_file": {
            "h1": 6,
            "h2": 12,
            "N1": 9,
            "N2": 14,
            "vocabulary": 18,
            "length": 23,
            "calculated_length": 58.52932501298082,
            "volume": 95.90827503317318,
            "difficulty": 3.5,
            "effort": 335.67896261610616,
            "time": 18.648831256450343,
            "bugs": 0.03196942501105773
          },
          "get_str": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "get_int": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "get_float": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "get_bool": {
            "h1": 1,
            "h2": 3,
            "N1": 2,
            "N2": 4,
            "vocabulary": 4,
            "length": 6,
            "calculated_length": 4.754887502163469,
            "volume": 12.0,
            "difficulty": 0.6666666666666666,
            "effort": 8.0,
            "time": 0.4444444444444444,
            "bugs": 0.004
          },
          "get_list": {
            "h1": 2,
            "h2": 3,
            "N1": 2,
            "N2": 3,
            "vocabulary": 5,
            "length": 5,
            "calculated_length": 6.754887502163469,
            "volume": 11.60964047443681,
            "difficulty": 1.0,
            "effort": 11.60964047443681,
            "time": 0.6449800263576005,
            "bugs": 0.0038698801581456034
          },
          "load_database_config": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "load_server_config": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "load_sensor_config": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "load_logging_config": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          }
        }
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\serial_reader.py": {
        "total": {
          "h1": 7,
          "h2": 32,
          "N1": 20,
          "N2": 37,
          "vocabulary": 39,
          "length": 57,
          "calculated_length": 179.65148445440323,
          "volume": 301.26792647514816,
          "difficulty": 4.046875,
          "effort": 1219.1936399541153,
          "time": 67.73297999745085,
          "bugs": 0.10042264215838272
        },
        "functions": {
          "__init__": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "connect": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          },
          "disconnect": {
            "h1": 1,
            "h2": 2,
            "N1": 1,
            "N2": 2,
            "vocabulary": 3,
            "length": 3,
            "calculated_length": 2.0,
            "volume": 4.754887502163469,
            "difficulty": 0.5,
            "effort": 2.3774437510817346,
            "time": 0.1320802083934297,
            "bugs": 0.0015849625007211565
          },
          "read_sensor_data": {
            "h1": 4,
            "h2": 25,
            "N1": 15,
            "N2": 30,
            "vocabulary": 29,
            "length": 45,
            "calculated_length": 124.09640474436812,
            "volume": 218.60914478074076,
            "difficulty": 2.4,
            "effort": 524.6619474737778,
            "time": 29.147885970765433,
            "bugs": 0.07286971492691359
          },
          "get_available_ports": {
            "h1": 0,
            "h2": 0,
            "N1": 0,
            "N2": 0,
            "vocabulary": 0,
            "length": 0,
            "calculated_length": 0,
            "volume": 0,
            "difficulty": 0,
            "effort": 0,
            "time": 0.0,
            "bugs": 0.0
          }
        }
      }
    }
  },
  "quality": {
    "timestamp": "2025-08-15T13:02:39.936286",
    "overall_score": 0,
    "files": {
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\dashboard\\app.py": {
        "issues": [
          {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 21,
            "column": 0,
            "endLine": 21,
            "endColumn": 64,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "import-error",
            "message": "Unable to import 'utils.data_processor'",
            "message-id": "E0401"
          },
          {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 21,
            "column": 0,
            "endLine": 21,
            "endColumn": 64,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from utils.data_processor import DataBuffer, process_sensor_data\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 22,
            "column": 0,
            "endLine": 22,
            "endColumn": 65,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "import-error",
            "message": "Unable to import 'utils.serial_reader'",
            "message-id": "E0401"
          },
          {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 22,
            "column": 0,
            "endLine": 22,
            "endColumn": 65,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from utils.serial_reader import DHT22SerialReader, DHT22Simulator\" should be placed at the top of the module",
            "message-id": "C0413"
          },
          {
            "type": "warning",
            "module": "app",
            "obj": "data_collection_thread",
            "line": 129,
            "column": 15,
            "endLine": 129,
            "endColumn": 24,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "broad-exception-caught",
            "message": "Catching too general exception Exception",
            "message-id": "W0718"
          },
          {
            "type": "warning",
            "module": "app",
            "obj": "update_current_values",
            "line": 150,
            "column": 26,
            "endLine": 150,
            "endColumn": 27,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'n'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "app",
            "obj": "update_temperature_chart",
            "line": 174,
            "column": 29,
            "endLine": 174,
            "endColumn": 30,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'n'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "app",
            "obj": "update_humidity_chart",
            "line": 209,
            "column": 26,
            "endLine": 209,
            "endColumn": 27,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'n'",
            "message-id": "W0613"
          },
          {
            "type": "warning",
            "module": "app",
            "obj": "update_statistics",
            "line": 244,
            "column": 22,
            "endLine": 244,
            "endColumn": 23,
            "path": "src\\python\\dashboard\\app.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'n'",
            "message-id": "W0613"
          }
        ],
        "issue_count": 9
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\data_processor.py": {
        "issues": [
          {
            "type": "refactor",
            "module": "data_processor",
            "obj": "get_comfort_level",
            "line": 91,
            "column": 4,
            "endLine": 102,
            "endColumn": 30,
            "path": "src\\python\\utils\\data_processor.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
          }
        ],
        "issue_count": 1
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\env_loader.py": {
        "issues": [
          {
            "type": "warning",
            "module": "env_loader",
            "obj": "EnvLoader._load_env_file",
            "line": 63,
            "column": 15,
            "endLine": 63,
            "endColumn": 24,
            "path": "src\\python\\utils\\env_loader.py",
            "symbol": "broad-exception-caught",
            "message": "Catching too general exception Exception",
            "message-id": "W0718"
          },
          {
            "type": "refactor",
            "module": "env_loader",
            "obj": "EnvLoader.get_bool",
            "line": 127,
            "column": 8,
            "endLine": 132,
            "endColumn": 26,
            "path": "src\\python\\utils\\env_loader.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
          }
        ],
        "issue_count": 2
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\serial_reader.py": {
        "issues": [
          {
            "type": "warning",
            "module": "serial_reader",
            "obj": "DHT22SerialReader.connect",
            "line": 33,
            "column": 12,
            "endLine": 33,
            "endColumn": 76,
            "path": "src\\python\\utils\\serial_reader.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
          },
          {
            "type": "warning",
            "module": "serial_reader",
            "obj": "DHT22SerialReader.connect",
            "line": 36,
            "column": 12,
            "endLine": 36,
            "endColumn": 66,
            "path": "src\\python\\utils\\serial_reader.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
          },
          {
            "type": "warning",
            "module": "serial_reader",
            "obj": "DHT22SerialReader.read_sensor_data",
            "line": 68,
            "column": 12,
            "endLine": 68,
            "endColumn": 61,
            "path": "src\\python\\utils\\serial_reader.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
          },
          {
            "type": "warning",
            "module": "serial_reader",
            "obj": "DHT22SerialReader.get_available_ports",
            "line": 73,
            "column": 8,
            "endLine": 73,
            "endColumn": 38,
            "path": "src\\python\\utils\\serial_reader.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'serial' from outer scope (line 10)",
            "message-id": "W0621"
          },
          {
            "type": "convention",
            "module": "serial_reader",
            "obj": "DHT22SerialReader.get_available_ports",
            "line": 73,
            "column": 8,
            "endLine": 73,
            "endColumn": 38,
            "path": "src\\python\\utils\\serial_reader.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (serial.tools.list_ports)",
            "message-id": "C0415"
          },
          {
            "type": "refactor",
            "module": "serial_reader",
            "obj": "DHT22Simulator",
            "line": 79,
            "column": 0,
            "endLine": 79,
            "endColumn": 20,
            "path": "src\\python\\utils\\serial_reader.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
          }
        ],
        "issue_count": 6
      }
    },
    "issues": [
      {
        "type": "error",
        "module": "app",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 64,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "import-error",
        "message": "Unable to import 'utils.data_processor'",
        "message-id": "E0401"
      },
      {
        "type": "convention",
        "module": "app",
        "obj": "",
        "line": 21,
        "column": 0,
        "endLine": 21,
        "endColumn": 64,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.data_processor import DataBuffer, process_sensor_data\" should be placed at the top of the module",
        "message-id": "C0413"
      },
      {
        "type": "error",
        "module": "app",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 65,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "import-error",
        "message": "Unable to import 'utils.serial_reader'",
        "message-id": "E0401"
      },
      {
        "type": "convention",
        "module": "app",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 65,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "wrong-import-position",
        "message": "Import \"from utils.serial_reader import DHT22SerialReader, DHT22Simulator\" should be placed at the top of the module",
        "message-id": "C0413"
      },
      {
        "type": "warning",
        "module": "app",
        "obj": "data_collection_thread",
        "line": 129,
        "column": 15,
        "endLine": 129,
        "endColumn": 24,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
      },
      {
        "type": "warning",
        "module": "app",
        "obj": "update_current_values",
        "line": 150,
        "column": 26,
        "endLine": 150,
        "endColumn": 27,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'n'",
        "message-id": "W0613"
      },
      {
        "type": "warning",
        "module": "app",
        "obj": "update_temperature_chart",
        "line": 174,
        "column": 29,
        "endLine": 174,
        "endColumn": 30,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'n'",
        "message-id": "W0613"
      },
      {
        "type": "warning",
        "module": "app",
        "obj": "update_humidity_chart",
        "line": 209,
        "column": 26,
        "endLine": 209,
        "endColumn": 27,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'n'",
        "message-id": "W0613"
      },
      {
        "type": "warning",
        "module": "app",
        "obj": "update_statistics",
        "line": 244,
        "column": 22,
        "endLine": 244,
        "endColumn": 23,
        "path": "src\\python\\dashboard\\app.py",
        "symbol": "unused-argument",
        "message": "Unused argument 'n'",
        "message-id": "W0613"
      },
      {
        "type": "refactor",
        "module": "data_processor",
        "obj": "get_comfort_level",
        "line": 91,
        "column": 4,
        "endLine": 102,
        "endColumn": 30,
        "path": "src\\python\\utils\\data_processor.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
      },
      {
        "type": "warning",
        "module": "env_loader",
        "obj": "EnvLoader._load_env_file",
        "line": 63,
        "column": 15,
        "endLine": 63,
        "endColumn": 24,
        "path": "src\\python\\utils\\env_loader.py",
        "symbol": "broad-exception-caught",
        "message": "Catching too general exception Exception",
        "message-id": "W0718"
      },
      {
        "type": "refactor",
        "module": "env_loader",
        "obj": "EnvLoader.get_bool",
        "line": 127,
        "column": 8,
        "endLine": 132,
        "endColumn": 26,
        "path": "src\\python\\utils\\env_loader.py",
        "symbol": "no-else-return",
        "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
        "message-id": "R1705"
      },
      {
        "type": "warning",
        "module": "serial_reader",
        "obj": "DHT22SerialReader.connect",
        "line": 33,
        "column": 12,
        "endLine": 33,
        "endColumn": 76,
        "path": "src\\python\\utils\\serial_reader.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
      },
      {
        "type": "warning",
        "module": "serial_reader",
        "obj": "DHT22SerialReader.connect",
        "line": 36,
        "column": 12,
        "endLine": 36,
        "endColumn": 66,
        "path": "src\\python\\utils\\serial_reader.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
      },
      {
        "type": "warning",
        "module": "serial_reader",
        "obj": "DHT22SerialReader.read_sensor_data",
        "line": 68,
        "column": 12,
        "endLine": 68,
        "endColumn": 61,
        "path": "src\\python\\utils\\serial_reader.py",
        "symbol": "logging-fstring-interpolation",
        "message": "Use lazy % formatting in logging functions",
        "message-id": "W1203"
      },
      {
        "type": "warning",
        "module": "serial_reader",
        "obj": "DHT22SerialReader.get_available_ports",
        "line": 73,
        "column": 8,
        "endLine": 73,
        "endColumn": 38,
        "path": "src\\python\\utils\\serial_reader.py",
        "symbol": "redefined-outer-name",
        "message": "Redefining name 'serial' from outer scope (line 10)",
        "message-id": "W0621"
      },
      {
        "type": "convention",
        "module": "serial_reader",
        "obj": "DHT22SerialReader.get_available_ports",
        "line": 73,
        "column": 8,
        "endLine": 73,
        "endColumn": 38,
        "path": "src\\python\\utils\\serial_reader.py",
        "symbol": "import-outside-toplevel",
        "message": "Import outside toplevel (serial.tools.list_ports)",
        "message-id": "C0415"
      },
      {
        "type": "refactor",
        "module": "serial_reader",
        "obj": "DHT22Simulator",
        "line": 79,
        "column": 0,
        "endLine": 79,
        "endColumn": 20,
        "path": "src\\python\\utils\\serial_reader.py",
        "symbol": "too-few-public-methods",
        "message": "Too few public methods (1/2)",
        "message-id": "R0903"
      }
    ]
  },
  "lines": {
    "timestamp": "2025-08-15T13:02:55.091436",
    "summary": {
      "nFiles": 4,
      "nLines": 928,
      "nCode": 740,
      "nComment": 33,
      "nBlank": 155
    },
    "by_file": {
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\dashboard\\app.py": {
        "nLines": 412,
        "nCode": 357,
        "nComment": 13,
        "nBlank": 42
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\data_processor.py": {
        "nLines": 184,
        "nCode": 135,
        "nComment": 6,
        "nBlank": 43
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\env_loader.py": {
        "nLines": 218,
        "nCode": 166,
        "nComment": 8,
        "nBlank": 44
      },
      "E:\\project\\04_P_dht22_monitoring\\src\\python\\utils\\serial_reader.py": {
        "nLines": 114,
        "nCode": 82,
        "nComment": 6,
        "nBlank": 26
      }
    }
  },
  "summary": {
    "total_coverage": 0,
    "total_files": 4,
    "total_lines": 928,
    "code_lines": 740,
    "quality_issues": 18
  }
}